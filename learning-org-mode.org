#+author: Neil Lin

* Markups

** Basic

   - * for *bold*
   - = for =verbatim=
   - / for /italic/
   - + for +strikethrough+
   - _ for _underline_
   - ~ for ~code~

** Syntax

   =PRE MARKER CONTENTS MARKER POST=

   PRE: whitespace, -, (, {, ', ", or beginning of line

   MARKER: those special characters in [[Basic]] section

   CONTENTS: goes with this format =BORDER BODY BORDER=
       BORDER: non-whitespace character
       BODY: any character,
             but not more than 3 lines <-- cannot figure out,
	                                   maybe a very long line?
       BORDER and BODY are separated by whitespaces
           (also cannot figure this out,
	    maybe cannot have whitespace at the beginning of first BORDER?
	    at the end of last BORDER?)

   So the following snippets are valid:

   #+begin_example
/line 1/
       /line  2/
       (/line 3/)
       -/line 4/
       -/---line 5---/-
       -*first*-/second/-+third+
   #+end_example

   Therefore, you *CANNOT* mark like these:

   #+begin_example
       cannot-markup/word/in-line
       / some whitespace between /
       / -text-/
       /-text- /
   #+end_example

   Other details can be found at [[https://orgmode.org/worg/dev/org-syntax.html#Emphasis_Markers][here]].

** Combine

   Sometimes you can combine _/any number/_ of markups, but it seems that the
   results really depend on the ability of display target. And it seems that
   /_order_/ also matters (note underline doesn't work here).

** Special Symbols

   Use =org-entities-help= can show you all the special characters
   (latin words, something like that).

** Literal Examples

   You can use the following format to show some literal text:

   : #+begin_example
   : Put some text here.
   : #+end_example

   Another cool thing is that we can create an anchor by using =ref= keyword:

   : #+begin_example -r
   : I'll be referenced by the next line. (ref:lit-ref-ex)
   : #+end_example

   Then we can reference it like this:
   : [[(lit-ref-ex)]]
   or this:
   : [[(lit-ref-ex)][Literal Ref Example]]

   See the following example as a demo:

   #+begin_example -r
   head back to me (ref:back-to-me)
   #+end_example

   And here is the [[(back-to-me)][link/jump/portal]]

* Code Blocks

** How to Specify Execution Results Format

   [[https://orgmode.org/manual/Results-of-Evaluation.html][Results of Evaluation]]

** Babel Library

   [[https://orgmode.org/worg/library-of-babel.html][The Library of Babel]]

** Languages

*** Python

    [[https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-python.html][ob-doc-python]]

* Links

** Internal Links

   [[https://orgmode.org/manual/Internal-Links.html][Internal Links]]

* Properties

** What is a Property in Org-Mode?

   A Property is used as a configuration appling to whole buffer.

*** Property Types

    1. Buffer-wide (need to be placed at the top of buffer)

       #+begin_example
       #+PROPERTY: title Org Learning Path
       #+PROPERTY: name  Neil
       #+PROPERTY: name+ Lin  <-- append to previous /name/
       #+end_example

    2. Property Drawer (placed below headlines)

       #+begin_example
       * A Header
         :PROPERTIES:
	 :name:  Neil Lin
         :END:
       #+end_example

** Session Shared by Multiple Source Code Blocks

   It seems that system-wide header arguments don't work on *session*
   arguments:

   #+begin_example
   * A Header
     :PROPERTIES:
     :header-args:shell: :session *u14*
     :END:
   #+end_example

   Maybe the only way to set system-wide ones is by customizing the
   =org-babel-default-header-args= variable.

   The [[https://orgmode.org/manual/Using-Header-Arguments.html][official manual]] says we can set =header-args= with specified
   language, so that given session can be shared between different
   code blocks. Like this:

   #+begin_example
   * A Header
     :PROPERTIES:
     :header-args:shell: :session *session-name*
     :END:

     #+begin_src shell
     ssh ubuntu-14
     #+end_src

     #+begin_src shell
     hostname -I
     #+end_src
   #+end_example

* Todos

** Track Progress

   Adding =[/]= or =[%]= anywhere in the headline to track its progress.
   See: [[https://orgmode.org/manual/Breaking-Down-Tasks.html#Breaking-Down-Tasks][Breaking Down Tasks into Subtasks]]

   Example:

   #+begin_example
   * A Header [1/4]
     - [ ] Milk
     - [X] Ham
     - [ ] Butter
     - [-] Veges [33%]
       - [ ] Lettuce
       - [X] Mushroom
       - [ ] Cucumber
   #+end_example

   Tip: use ~C-c C-c~ to update TODO status

** Checkboxes

   A lightweight version of TODO, often used to split simple tasks.

   Tip: use ~S-M-RET~ to insert a new checkbox (org-insert-todo-heading)

* PDF

  I was trying to install =pdflatex= on Mac:

  #+begin_src shell :results silent
  brew install --cask mactex-no-gui
  #+end_src

  But brew kept on getting failures when downloading ghostscript fonts:

  #+begin_example
  ==> Downloading https://downloads.sourceforge.net/project/gs-fonts/gs-fonts/8.11%20%28base%2035%2C%20GPL%29/ghostscript-fonts-std-8.11.tar.gz
  ######################################################################## 100.0%
  curl: (7) Failed to connect to nchc.dl.sourceforge.net port 443: Operation timed out
  Error: Failed to download resource "ghostscript--fonts"
  Download failed: https://downloads.sourceforge.net/project/gs-fonts/gs-fonts/8.11%20%28base%2035%2C%20GPL%29/ghostscript-fonts-std-8.11.tar.gz
  #+end_example

  Maybe try another day :(

  Updated: I tried again on [2021-02-24 Wed] and it successed!

  Then, restart the terminal (or vterm, in my case).

  Used the following command to check the binary path:

  #+begin_src shell
  which pdflatex
  #+end_src

  #+RESULTS:
  : /Library/TeX/texbin/pdflatex

  [2021-02-24 Wed] Updated: although PDF function is working now,
  but the output file seemed not so pretty. Maybe there's another
  better way to export as PDF.

* Misc

** Sending Emails

   [[https://github.com/howardabrams/dot-files/blob/master/emacs-mail.org#sending-email][Sending Email]]
