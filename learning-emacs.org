#+author: Neil Lin

* Useful Commands

- helm-occur
- helm-show-kill-ring
- completion-at-point
- which-key-show-top-level
- yank-rectangle
  - kill in multiple-cursor and get out of it, then yank, it'll only yank the kill-ring from main cursor. If you want to yank all, use this command (=C-x r y=)
- shell-command
- run-python
- python-shell-send-region
- python-shell-send-defun
- python-shell-send-buffer
- python-shell-send-file
- what-cursor-position
- list-colors-display
- what-cursor-position

* Lessons Learned

** vterm

*** Install

The following commands are what I was trying to have a good =vterm-module= to make =vterm= working.

First, when I was typing the command =M-x vterm=, the Emacs showed me this message:

#+begin_example
Vterm needs `vterm-module' to work.  Compile it now? (y or n)
#+end_example

I click =y= to proceed, then message showed again for another error:

#+begin_example
Vterm needs CMake to be compiled. Please, install CMake
#+end_example

So I jumped into the terminal and type these command to install dependent tools (see [[https://github.com/akermu/emacs-libvterm#requirements][akermu/emacs-libvterm]]):

#+begin_src shell
brew install cmake
brew install libvterm
#+end_src

I'm not sure whether the =perl= is mandatory:

#+begin_src shell
brew install --build-from-source perl
#+end_src

But I still got the same message complaining about no =CMake= at all.

Finally I stumbled onto this [[https://github.com/akermu/emacs-libvterm/issues/169][thread]] and found that I have to build =vterm-module= by myself on terminal:

#+name: vterm-path
#+begin_src shell
ls "$HOME/.emacs.d/elpa" | grep vterm
#+end_src

#+RESULTS: vterm-path
: vterm-20210217.737

#+begin_src shell :var vterm_path=vterm-path :results output
cd "$HOME/.emacs.d/elpa/$vterm_path"
mkdir -p build
cd build
/usr/local/bin/cmake ..
make
#+end_src

#+RESULTS:
: -- System libvterm detected
: -- Configuring done
: -- Generating done
: -- Build files have been written to: /Users/lab/.emacs.d/elpa/vterm-20210217.737/build
: [100%] Built target vterm-module

Then =vterm= worked!

[2021-03-03 Wed] sometimes you still face an issue when running =make= command, try to update XCode command line tool to solve it:

#+begin_src shell
xcode-select --install
#+end_src

#+RESULTS:

*** Configure Shell-Side

*vterm* document says we can setup our shell for advanced features like /directory tracking/ and /prompt tracking/. So I configured my shell rc like the following sections.

See this 2 sections for detail:
- [[https://github.com/akermu/emacs-libvterm#shell-side-configuration][Shell-side configuration]]
- [[https://github.com/akermu/emacs-libvterm#directory-tracking-and-prompt-tracking][Directory tracking and Prompt tracking]]

**** Bash

I first changed my =.dotfiles/bash/settings-local-mac= to this:

#+begin_src shell
__customize_prompt() {
    local EXIT_CODE="$?"
    PS1=""

    local NORMAL="\[\033[0m\]"
    local BOLD="\[\033[1m\]"
    local RED="\[\033[31m\]"
    local GREEN="\[\033[32m\]"
    local YELLOW="\[\033[33m\]"
    local BLUE="\[\033[34m\]"

    if [ ! -z $VIRTUAL_ENV ]; then
        PS1+="(${YELLOW}$(basename $VIRTUAL_ENV)${NORMAL}) "
    fi

    PS1+="${GREEN}\h${NORMAL}:${BOLD}${BLUE}\W${NORMAL} "
    if [ $EXIT_CODE != 0 ]; then
        PS1+="[${RED}$EXIT_CODE${NORMAL}]\$ "
    else
        PS1+="[$EXIT_CODE]\$ "
    fi
}

__customize_prompt
#+end_src

Then appened code snippets from vterm documents to the same file:

#+begin_src shell
# configure vterm (for Emacs)
vterm_printf(){
    if [ -n "$TMUX" ] && ([ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ] ); then
        # Tell tmux to pass the escape sequences through
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}

vterm_prompt_end(){
    vterm_printf "51;A$(whoami)@$(hostname):$(pwd)"
}
PS1=$PS1'\[$(vterm_prompt_end)\]'
#+end_src

** Fonts

*** ETBook

Github: [[https://github.com/edwardtufte/et-book.git][edwardtufte/et-book]]

Directly install fonts by *brew*:

#+begin_src shell :results output
brew install font-et-book
#+end_src

* Others Emacs Configuration

- [[https://github.com/daviwil/emacs-from-scratch/blob/master/init.el][daviwil]]
- [[https://github.com/zzamboni/dot-emacs/blob/master/init.org][zzamboni]]
